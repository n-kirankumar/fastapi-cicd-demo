name: FastAPI CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  PROJECT_ID: test-teraform-vm
  GAR_LOCATION: asia-south1
  REPOSITORY: fastapi-cicd-repo
  IMAGE: fastapi-cicd-app
  CLUSTER_NAME: fastapi-gke-cluster
  CLUSTER_LOCATION: us-central1-a
  DEPLOYMENT_NAME: fastapi-cicd-deploy
  NAMESPACE: fastapi-cicd-ns

jobs:
  # -------------------
  # 1️⃣ Linting
  # -------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install flake8
        run: |
          pip install flake8
          flake8 app --max-line-length=120

  # -------------------
  # 2️⃣ Security Scan
  # -------------------
  security:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run Bandit security check
        run: |
          pip install bandit
          bandit -r app -ll

  # -------------------
  # 3️⃣ Unit Tests
  # -------------------
  tests:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pytest

      - name: Run pytest
        run: pytest

  # -------------------
  # 4️⃣ Build Docker Image
  # -------------------
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build Docker image
        run: docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}

  # -------------------
  # 5️⃣ Deploy to GKE
  # -------------------
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Authenticate GKE Cluster
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.CLUSTER_LOCATION }} --project ${{ env.PROJECT_ID }}

      - name: Update image in deployment
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
          fastapi-cicd-container=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }} \
          -n ${{ env.NAMESPACE }}

      - name: Verify rollout
        run: kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n ${{ env.NAMESPACE }}

