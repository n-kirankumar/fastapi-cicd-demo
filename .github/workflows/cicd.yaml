name: CI/CD Pipeline for FastAPI on GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: fastapi-gke-project
  REGION: us-central1
  REPOSITORY: fastapi-repo
  IMAGE_NAME: fastapi-cicd-app
  CLUSTER_NAME: fastapi-gke-cluster
  NAMESPACE: fastapi-cicd-ns

jobs:
  # ---------------- STAGE 1 ----------------
  checkout:
    name: 1Ô∏è‚É£ Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  # ---------------- STAGE 2 ----------------
  install:
    name: 2Ô∏è‚É£ Install Dependencies
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # ---------------- STAGE 3 ----------------
  lint:
    name: 3Ô∏è‚É£ Run Linting
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 app --max-line-length=120

  # ---------------- STAGE 4 ----------------
  test:
    name: 4Ô∏è‚É£ Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Run pytest
        run: pytest || echo "‚ö†Ô∏è Tests failed, review manually."

  # ---------------- STAGE 5 ----------------
  build:
    name: 5Ô∏è‚É£ Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }} .
          docker save -o image.tar ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}

  # ---------------- STAGE 6 ----------------
  push:
    name: 6Ô∏è‚É£ Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Load and Push Docker Image
        run: |
          docker load -i image.tar
          echo "üîê Authenticating Docker to Artifact Registry..."
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://${{ env.REGION }}-docker.pkg.dev
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          echo "‚úÖ Docker image pushed successfully."

  # ---------------- STAGE 7 ----------------
  deploy:
    name: 7Ô∏è‚É£ Deploy to GKE
    runs-on: ubuntu-latest
    needs: push
    steps:
      - uses: actions/checkout@v4
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get GKE Credentials
        run: gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}
      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/fastapi-cicd-deploy -n ${{ env.NAMESPACE }}
          echo "‚úÖ Deployment completed successfully."

  # ---------------- STAGE 8 ----------------
  verify:
    name: 8Ô∏è‚É£ Verify Deployment
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Verify Service
        run: |
          echo "üîç Verifying deployment..."
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}
          kubectl -n ${{ env.NAMESPACE }} get svc
          echo "‚úÖ Verification completed successfully!"

