name: CI/CD Pipeline for FastAPI on GKE

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: fastapi-gke-project
  REGION: us-central1
  CLUSTER_NAME: fastapi-gke-cluster
  CLUSTER_ZONE: us-central1-c
  IMAGE_NAME: fastapi-cicd-app
  NAMESPACE: fastapi-cicd-ns
  DEPLOYMENT_NAME: fastapi-cicd-deploy

jobs:
  # 1Ô∏è‚É£ Checkout Code
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  # 2Ô∏è‚É£ Lint (Flake8)
  lint:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - name: Run flake8
        run: |
          pip install flake8
          flake8 app --max-line-length=120 || true

  # 3Ô∏è‚É£ Unit Tests (Pytest)
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies and test
        run: |
          pip install -r requirements.txt pytest
          pytest || true

  # 4Ô∏è‚É£ Security Scan (Bandit)
  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Run Bandit scan
        run: |
          pip install bandit
          bandit -r app || true

  # 5Ô∏è‚É£ Build and Push Docker Image (Combined)
  build_push:
    runs-on: ubuntu-latest
    needs: security
    outputs:
      image_path: ${{ steps.save_image.outputs.image_path }}
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure Docker for GCR
        run: gcloud auth configure-docker --quiet
      - name: Build and Push Docker image
        id: save_image
        run: |
          IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "image_path=$IMAGE" >> $GITHUB_OUTPUT

  # 6Ô∏è‚É£ Deploy to GKE
  deploy:
    runs-on: ubuntu-latest
    needs: build_push
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
      - run: |
          gcloud components install gke-gcloud-auth-plugin --quiet
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.CLUSTER_ZONE }} --project ${{ env.PROJECT_ID }}
          kubectl -n ${{ env.NAMESPACE }} set image deployment/${{ env.DEPLOYMENT_NAME }} \
            ${{ env.DEPLOYMENT_NAME }}=${{ needs.build_push.outputs.image_path }} --record
          kubectl -n ${{ env.NAMESPACE }} rollout status deployment/${{ env.DEPLOYMENT_NAME }}

  # 7Ô∏è‚É£ Verify Deployment
  verify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
      - run: |
          gcloud components install gke-gcloud-auth-plugin --quiet
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.CLUSTER_ZONE }} --project ${{ env.PROJECT_ID }}
          echo "Deployment verification started..."
          kubectl -n ${{ env.NAMESPACE }} get pods
          kubectl -n ${{ env.NAMESPACE }} get svc
          EXTERNAL_IP=$(kubectl -n ${{ env.NAMESPACE }} get svc ${{ env.DEPLOYMENT_NAME }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "‚úÖ FastAPI successfully deployed! External IP: $EXTERNAL_IP"
          curl -I http://$EXTERNAL_IP

  # 8Ô∏è‚É£ Notify Success
  notify:
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - run: echo "üéâ CI/CD pipeline completed successfully!"

