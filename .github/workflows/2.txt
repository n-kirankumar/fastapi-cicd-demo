name: FastAPI CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  PROJECT_ID: fastapi-gke-project
  REGION: us-central1
  REPOSITORY: fastapi-repo
  IMAGE_NAME: fastapi-cicd-app
  CLUSTER_NAME: fastapi-gke-cluster
  NAMESPACE: fastapi-cicd-ns

jobs:
  # ------------------- 1️⃣ CHECKOUT -------------------
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  # ------------------- 2️⃣ SETUP PYTHON -------------------
  setup-python:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

  # ------------------- 3️⃣ INSTALL DEPENDENCIES -------------------
  install-deps:
    runs-on: ubuntu-latest
    needs: setup-python
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          cd app
          python -m pip install --upgrade pip
          pip install -r ../requirements.txt
          echo "✅ Dependencies installed."

  # ------------------- 4️⃣ RUN UNIT TESTS -------------------
  test:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Dependencies
        run: |
          cd app
          pip install -r ../requirements.txt pytest
      - name: Run Unit Tests
        run: |
          cd app
          pytest --maxfail=1 --disable-warnings -q

  # ------------------- 5️⃣ LINTING -------------------
  lint:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Run Flake8
        run: |
          pip install flake8
          flake8 app --max-line-length=120

  # ------------------- 6️⃣ SECURITY SCAN -------------------
  security:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Run Bandit Scan
        run: |
          pip install bandit
          bandit -r app || true

  # ------------------- 7️⃣ BUILD DOCKER IMAGE -------------------
  build:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build Docker Image
        run: |
          IMAGE_URI=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          docker build -t $IMAGE_URI .
          docker save $IMAGE_URI -o image.tar
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: fastapi-image
          path: image.tar

  # ------------------- 8️⃣ PUSH & DEPLOY TO GKE -------------------
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Built Image
        uses: actions/download-artifact@v4
        with:
          name: fastapi-image

      - name: Authenticate to Google Cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Load and Push Docker Image
        run: |
          docker load -i image.tar
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          echo "✅ Docker image pushed successfully."

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}
          kubectl set image deployment/fastapi-cicd-deploy fastapi-cicd=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }} -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/fastapi-cicd-deploy -n ${{ env.NAMESPACE }}
          echo "✅ Deployment completed successfully."

